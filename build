#!/usr/bin/env python3
import argparse
import glob
import json
import os
import subprocess
import sys

parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group()
group.add_argument("--release")
group.add_argument("--quick", "-q", action="store_true")
args = parser.parse_args()

os.chdir(os.path.dirname(__file__))

if not args.quick:
    with open("manifest.json") as f:
        manifest = json.load(f)
    current_version = manifest["version"]

    if args.release:
        print("build new release: %s -> %s" % (current_version, args.release))
        manifest["version"] = args.release
    else:
        print("building release %s" % current_version)

    js_files = glob.glob("src/*.js")

    for filename in js_files:
        print("formatting %s.." % filename)
        subprocess.check_call(["prettier", "--write", "--tab-width", "4", filename])

        print("linting %s.." % filename)
        subprocess.check_call(["eslint", filename])

    print("web-ext linting..")
    subprocess.check_call(["web-ext", "lint", "--warnings-as-errors"])

print("building..")
subprocess.check_call(
    ["web-ext", "build"]
    + ["--overwrite-dest"]
    + ["--ignore-files", "build"]
    + ["--artifacts-dir", "dist"]
)

if args.release:
    with open("manifest.json", "w") as f:
        json.dump(manifest, f, indent=2)
        f.write("\n")
    print("manifest.json updated")
